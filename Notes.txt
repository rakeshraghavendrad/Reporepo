import pandas as pd
from ragas.dataset_schema import SingleTurnSample
from ragas.metrics import SemanticSimilarity
from ragas.embeddings import LangchainEmbeddingsWrapper

# Set up your embedding wrapper (assumes you already have evaluator_embedding)
embedding_wrapper = LangchainEmbeddingsWrapper(evaluator_embedding)
scorer = SemanticSimilarity(embeddings=embedding_wrapper)

# Example dataframe (or use your own)
# df = pd.read_csv("your_file.csv")  # if you're loading from a file
# Make sure these column names match your actual dataframe
# For example:
# df.columns = ["evidence_run1", "evidence_run2"]

# Loop through rows and compute the semantic similarity
scores = []
for i, row in df.iterrows():
    sample = SingleTurnSample(
        response=row["evidence_run1"],
        reference=row["evidence_run2"]
    )
    score = scorer.single_turn_score(sample)
    scores.append(score)

# Add result to the dataframe
df["ragas_semanticsimilarity"] = scores

# Done! You can display or save the dataframe now
print(df)
