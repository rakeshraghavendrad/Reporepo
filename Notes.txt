
merged_df = pd.concat([df_rouge1, df_rouges], axis=1)
merged_df = merged_df.loc[:, ~merged_df.columns.duplicated()]





def _generate_verdicts(
    self, input: str, expected_output: str, retrieval_context: List[str]
):
    prompt = self.evaluation_template.generate_verdicts(
        input=input,
        expected_output=expected_output,
        retrieval_context=retrieval_context,
    )

    if self.using_native_model:
        res, cost = self.model.generate(prompt, schema=ContextualPrecisionScore)
        self.evaluation_cost += cost
        self.score = res.score
        self.reason = res.reason
        return []  # no verdicts used anymore
    else:
        try:
            res: ContextualPrecisionScore = self.model.generate(
                prompt, schema=ContextualPrecisionScore
            )
            self.score = res.score
            self.reason = res.reason
            return []
        except TypeError:
            res = self.model.generate(prompt)
            data = trimAndLoadJson(res, self)
            self.score = data["score"]
            self.reason = data["reason"]
            return []
