
input_match = re.search(r'input=(\{.*?\}|\S+)', line, re.DOTALL)






# Initialize
records = []
current_claim_data = "Not found"  # Holds the last seen claim_data PDF filename

# Loop through all lines
for raw_line in lines:
    line = remove_ansi_escape(raw_line.strip())  # Clean line

    # Update current claim_data if new one is found
    claim_match = re.search(r'claim data.*?([^\\/:\*\?"<>\|\r\n]+\.pdf)', line)
    if claim_match:
        current_claim_data = claim_match.group(1)

    # Check for any keyword match
    for keyword in keywords:
        if keyword in line:
            # Extract additional fields using regex
            input_match = re.search(r'input_=([\S+\.pdf]+)', line)
            evidence_match = re.search(r'evidence(?:=|\s*:\s*")([^"]+)', line)
            summary_match = re.search(r'summary(?:=|\s*:\s*")([^"]+)', line)
            is_compelling_match = re.search(r'is_compelling=(True|False)', line)
            generated_text_match = re.search(r'generated_text(?:=|\s*:\s*")([^"]+)', line)
            cardholder_profile_match = re.search(r'cardholder_profile=\{(.*?)\}', line)

            # Append data to records list
            records.append({
                "claim_data": current_claim_data,
                "keyword": keyword,
                "input": input_match.group(1) if input_match else "Not found",
                "evidence": evidence_match.group(1) if evidence_match else "Not found",
                "summary": summary_match.group(1) if summary_match else "Not found",
                "is_compelling": is_compelling_match.group(1) if is_compelling_match else "Not found",
                "generated_text": generated_text_match.group(1) if generated_text_match else "Not found",
                "cardholder_profile": cardholder_profile_match.group(1) if cardholder_profile_match else "Not found"
            })
            break  # Stop checking other keywords once matched

# Convert to DataFrame
df = pd.DataFrame(records)

# Display or export
# df.to_csv("extracted_case_data.csv", index=False)
df
