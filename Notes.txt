
import pandas as pd

file_path = "your_file.xlsx"

# Function to drop unnamed columns
def drop_unnamed(df):
    return df.loc[:, ~df.columns.str.contains('^Unnamed')]

# Read Sheet1
df_sheet1 = pd.read_excel(file_path, sheet_name="Sheet1", engine='openpyxl')
df_sheet1 = drop_unnamed(df_sheet1)

# Read Sheet2
df_sheet2 = pd.read_excel(file_path, sheet_name="Sheet2", engine='openpyxl')
df_sheet2 = drop_unnamed(df_sheet2)

print(df_sheet1.head())
print(df_sheet2.head())def _generate_verdicts(
    self, input: str, expected_output: str, retrieval_context: List[str]
):
    prompt = self.evaluation_template.generate_verdicts(
        input=input,
        expected_output=expected_output,
        retrieval_context=retrieval_context,
    )

    if self.using_native_model:
        res, cost = self.model.generate(prompt, schema=ContextualPrecisionScore)
        self.evaluation_cost += cost
        self.score = res.score
        self.reason = res.reason
        return []  # no verdicts used anymore
    else:
        try:
            res: ContextualPrecisionScore = self.model.generate(
                prompt, schema=ContextualPrecisionScore
            )
            self.score = res.score
            self.reason = res.reason
            return []
        except TypeError:
            res = self.model.generate(prompt)
            data = trimAndLoadJson(res, self)
            self.score = data["score"]
            self.reason = data["reason"]
            return []
