import pandas as pd
import json

def extract_decision_reason(df, output_col="LLM_Output"):
    """
    Takes a dataframe with a column containing model outputs
    and extracts Decision + Reason into separate columns.
    """
    decisions = []
    reasons = []

    for text in df[output_col]:
        try:
            # ✅ If output is strict JSON
            parsed = json.loads(text)
            decisions.append(parsed.get("Decision", "").strip())
            reasons.append(parsed.get("Reason", "").strip())
        except:
            # ⚠️ fallback if model returned plain text
            decision, reason = "", ""
            if "Accept" in text:
                decision = "Accept"
            elif "Decline" in text:
                decision = "Decline"
            if "Reason" in text:
                reason = text.split("Reason")[-1].strip(" :.-")
            decisions.append(decision)
            reasons.append(reason)

    df["Predicted_Decision"] = decisions
    df["Predicted_Reason"] = reasons
    return df


# -------------------------------
# ✅ Example usage
# -------------------------------
# Suppose df has a column "LLM_Output" with model responses
# df = pd.DataFrame({
#     "Doc_id": [1, 2],
#     "LLM_Output": [
#         '{"Decision": "Accept", "Reason": "Document is valid"}',
#         '{"Decision": "Decline", "Reason": "Incomplete details"}'
#     ]
# })

df = extract_decision_reason(df, output_col="LLM_Output")

print(df[["Doc_id", "Predicted_Decision", "Predicted_Reason"]])
