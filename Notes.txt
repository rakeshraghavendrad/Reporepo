import pandas as pd
import asyncio
from ragas.dataset_schema import SingleTurnSample
from ragas.metrics import SemanticSimilarity
from ragas.embeddings import LangchainEmbeddingsWrapper

# Define or import your embedding model
# For example:
# from langchain.embeddings import OpenAIEmbeddings
# evaluator_embedding = OpenAIEmbeddings()

# Wrap it
embedding_wrapper = LangchainEmbeddingsWrapper(evaluator_embedding)

# Create the scorer
scorer = SemanticSimilarity(embeddings=embedding_wrapper)

# Your DataFrame with text columns
df = pd.DataFrame({
    "run1": [
        "The Eiffel Tower is located in Paris.",
        "Mount Everest is the tallest mountain in the world."
    ],
    "run2": [
        "The Eiffel Tower is located in Paris. It has a height of 1000ft.",
        "Mount Everest is the highest mountain with a height of 8848m."
    ]
})

# Async function to score all rows
async def add_semantic_similarity_scores(df):
    scores = []
    for i, row in df.iterrows():
        sample = SingleTurnSample(response=row["run1"], reference=row["run2"])
        score = await scorer.single_turn_ascore(sample)
        scores.append(score)
    df["ragas_semanticsimilarity"] = scores
    return df

# Run the async function
df = asyncio.run(add_semantic_similarity_scores(df))

# See result
print(df)
