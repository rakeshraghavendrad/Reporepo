from deepeval.metrics import ContextualPrecisionMetric
from deepeval.test_case import LLMEvalTestCase
import pandas as pd

# Initialize metric
contextual_precision_metric = ContextualPrecisionMetric(
    threshold=0.7,
    model=llm_no_ssl,
    include_reason=True
)

# Define row-wise evaluation function
def apply_contextual_precision(row):
    test_case = LLMEvalTestCase(
        input="Check if the output is contextual and precise.",
        actual_output=row["evidence_run2"],
        expected_output=row["expected_output"],       # ⚠️ Required by this metric
        retrieval_context=[row["evidence_run1"]]
    )
    result = contextual_precision_metric.measure(test_case)
    return pd.Series({
        "contextual_precision_score": result.score,
        "contextual_precision_reason": result.reason
    })

# Apply to dataframe (ensure 'expected_output' column exists!)
df_evidence[["contextual_precision_score", "contextual_precision_reason"]] = df_evidence.apply(apply_contextual_precision, axis=1)
